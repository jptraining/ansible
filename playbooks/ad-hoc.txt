#Ajouter les options -u and -k pour saisir le login et le mot de passe
ansible webservers -i hosts -m command -a "pwd" -u vagrant -k

#Lister le contenu du repertoire racine des serveurs distants avec le module command :
ansible webservers -i hosts -m command -a "ls -l /" -u vagrant -k

#Exécuter le module ping
ansible webservers -i hosts -m ping"

#Executer un script shell sur les serveurs distants avec le module script:
ansible webservers -i hosts -m script -a "my_script.sh 76542" -u vagrant -k

#Affichage des faits des machines distantes
ansible all -i hosts -m setup -u vagrant -k

#Affichage des facts avec un filtre sur ipv4
ansible all -i hosts -m setup -a 'filter=*ipv4*' -u vagrant -k

#Affichage des facts avec un filtre sur les interface 0, 1 et 2
ansible all -i hosts -m setup -a 'filter=ansible_eth[0-2]'

#Créer le groupe ansible
ansible all -i hosts -m group -a "state=present name=ansible" -u vagrant -k -b -K

Créer l'utilisateur « ansible » sur les machines distantes avec le module user:
ansible all -i hosts -m user -a "state=present name=ansible groups=ansible shell=/bin/bash" -u vagrant -k -b -K

#Générer un clef ssh
ssh-keygen

#Copier la clef publique dans le compte ansible distant
ansible webservers -i hosts -m authorized_key -a "state=present user=ansible key='https://raw.githubusercontent.com/jptraining/ansible/master/keys/id_rsa.pub'" -u vagrant -k -b -K

#Se connecter avec le compte ansible en utilisant la clef ssh
ansible all -i hosts --private-key="/home/vagrant/.ssh/id_rsa" -a "ls -ltr" -u ansible